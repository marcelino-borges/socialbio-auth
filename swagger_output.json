{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SocialBio Authentication Service",
    "description": "Authentication service for the application in react"
  },
  "host": "http://www.localhost:5000",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signs the user in by credentials",
        "description": "Signs the user in by credentials",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User tokens",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Message of error"
          },
          "500": {
            "description": "Message of error"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signs the user out",
        "description": "Signs the user out, ending his token",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "example": "any"
                }
              }
            },
            "description": "User email",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "400": {
            "description": "Message of error"
          },
          "500": {
            "description": "Message of error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signs the user up",
        "description": "Creates user access in database",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string"
          },
          {
            "name": "confirmPassword",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "body",
            "description": "User first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "body",
            "description": "User last name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AppResult"
            },
            "description": "Result of the request"
          },
          "400": {
            "description": "Message of error"
          },
          "500": {
            "description": "Message of error"
          }
        }
      }
    }
  },
  "definitions": {
    "Token": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "example": "asd123asd-asd12asd"
        },
        "refreshToken": {
          "type": "string",
          "example": "a1zasf23asd-hjyqw1567asd"
        },
        "expiresIn": {
          "type": "number",
          "example": 3600
        }
      }
    },
    "AppResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Message result of the request"
        },
        "errorDetails": {
          "type": "string",
          "example": "In case of error, here goes the details"
        },
        "statusCode": {
          "type": "number",
          "example": 400
        }
      }
    }
  }
}